name: GraalVM Native Image Build

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'go/**'
      - '**.md'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - 'go/**'
      - '**.md'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: amd64
            label: linux-amd64
          - os: ubuntu-latest
            arch: arm64
            label: linux-arm64
          - os: windows-latest
            arch: amd64
            label: windows
          - os: macos-latest
            arch: amd64
            label: macos-x64
          - os: macos-14
            arch: arm64
            label: macos-arm64

    steps:
    - uses: actions/checkout@v4

    - name: Setup GraalVM
      uses: graalvm/setup-graalvm@v1
      with:
        java-version: '17'
        distribution: 'graalvm'
        github-token: ${{ secrets.GITHUB_TOKEN }}
        native-image-job-reports: 'true'
        architecture: ${{ matrix.arch }}

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-${{ matrix.arch }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-${{ matrix.arch }}-m2

    - name: Build with Maven
      run: mvn -B clean package assembly:single --file pom.xml

    - name: Rename JAR file
      if: matrix.os == 'ubuntu-latest' && matrix.arch == 'amd64'
      run: |
        mkdir -p dist
        cp target/*-jar-with-dependencies.jar dist/Copilot-api.jar

    - name: Upload JAR
      if: matrix.os == 'ubuntu-latest' && matrix.arch == 'amd64'
      uses: actions/upload-artifact@v4
      with:
        name: jar-build
        path: dist/Copilot-api.jar
        retention-days: 5

    - name: Prepare for Native Image
      shell: bash
      run: |
        mkdir -p target/native-image
        if [ "${{ matrix.os }}" = "ubuntu-latest" ] && [ "${{ matrix.arch }}" = "amd64" ]; then
          cp dist/Copilot-api.jar target/native-image/
        else
          cp target/*-jar-with-dependencies.jar target/native-image/Copilot-api.jar
        fi

    - name: Build Native Image
      shell: bash
      run: |
        cd target/native-image
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          native-image \
            -H:+AddAllCharsets \
            -jar Copilot-api.jar \
            -H:Name=Copilot-api \
            --enable-https \
            --enable-http \
            --static \
            --no-fallback \
            --initialize-at-build-time=Main \
            --initialize-at-build-time=CompletionHandler \
            --initialize-at-build-time=EmbeddingHandler \
            --initialize-at-build-time=HeadersInfo
        else
          native-image \
            -H:+AddAllCharsets \
            -jar Copilot-api.jar \
            -H:Name=Copilot-api \
            --enable-https \
            --enable-http \
            --static \
            --no-fallback \
            --initialize-at-build-time=Main \
            --initialize-at-build-time=CompletionHandler \
            --initialize-at-build-time=EmbeddingHandler \
            --initialize-at-build-time=HeadersInfo
        fi

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.label }}-build
        path: |
          target/native-image/Copilot-api${{ matrix.os == 'windows-latest' && '.exe' || '' }}
        retention-days: 5

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest' && matrix.arch == 'amd64'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/Copilot-api.jar
          target/native-image/Copilot-api
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Assets
      if: startsWith(github.ref, 'refs/tags/') && (matrix.os != 'ubuntu-latest' || matrix.arch != 'amd64')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          target/native-image/Copilot-api${{ matrix.os == 'windows-latest' && '.exe' || '' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
