name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven
        
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Check Maven Version
      run: mvn --version

    - name: Check Dependencies
      run: mvn dependency:tree
    
    - name: Build with Maven
      run: mvn -B clean package --file pom.xml

    # 上传构建产物到 Actions
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Copilot2API-jar
        path: target/Copilot2API-*.jar
        retention-days: 5

    # 创建 Release（当推送标签时）
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: target/Copilot2API-*.jar
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # 将最新构建保存到特定分支
    - name: Save latest build to branch
      if: github.ref == 'refs/heads/main'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # 创建或切换到 builds 分支
        git fetch origin builds || git checkout --orphan builds
        git checkout builds || true
        git reset --hard
        
        # 清理旧文件并复制新构建
        rm -rf *.jar || true
        cp target/Copilot2API-*.jar .
        
        # 提交并推送
        git add *.jar
        git commit -m "Update build artifacts from main branch" || echo "No changes to commit"
        git push origin builds || git push --set-upstream origin builds
